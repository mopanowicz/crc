#!/bin/bash

if [ "$DEBUG_BUILD" == "true" ]; then
    set -x
    env | sort
    ls -laR /
fi

BUILD_TOOL=${BUILD_TOOL:-"unknown"}

if [[ "$BUILD_TOOL" == "unknown" || "$BUILD_TOOL" == "gradle" ]]; then
    if [ -f build.gradle ]; then
        BUILD_TOOL="gradle"
        echo "Found build.gradle - packaging with gradle"
        if [ -f gradlew ]; then
            sh ./gradlew $BUILD_OPTS build $BUILD_ARGS
        else
            gradle $BUILD_OPTS build $BUILD_ARGS
        fi
    elif [[ "$BUILD_TOOL" == "gradle" ]]; then
        echo "No build.gradle - exiting"
        exit 1
    fi
fi

if [[ "$BUILD_TOOL" == "unknown" || "$BUILD_TOOL" == "maven" ]]; then
    if [ -f pom.xml ]; then
        BUILD_TOOL="maven"
        echo "Found pom.xml - packaging with maven"
        if [ -f mvnw ]; then
            sh ./mvnw $BUILD_OPTS package $BUILD_ARGS
        else
            mvn $BUILD_OPTS package $BUILD_ARGS
        fi
    elif [[ "$BUILD_TOOL" == "maven" ]]; then
        echo "No pom.xml - exiting"
        exit 1
    fi
fi

if [[ "$BUILD_TOOL" == "unknown" ]]; then
    echo "Unknown build tool - exiting"
    exit 1
fi

if [ "$MAIN_JAR_EXCLUDE_NAME" == "" ]; then
    MAIN_JAR=$(find . -maxdepth 3 -name "*.jar")
else
    echo "MAIN_JAR_EXCLUDE_NAME = $MAIN_JAR_EXCLUDE_NAME"
    MAIN_JAR=$(find . -maxdepth 3 -name "*.jar" -and -not -name "$MAIN_JAR_EXCLUDE_NAME")
fi

echo "MAIN_JAR=$MAIN_JAR"

if [ ! -f "$MAIN_JAR" ]; then
    echo "No $MAIN_JAR - exiting"
    exit 1
fi

mv $MAIN_JAR main.jar
